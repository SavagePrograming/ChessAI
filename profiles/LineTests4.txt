Timer unit: 1e-06 s

Total time: 8.82457 s
File: Square.py
Function: check at line 140

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   140                                               @profile
   141                                               def check(self, board):
   142     53888       259166      4.8      2.9          append = list.append
   143     53888       280772      5.2      3.2          p_m = self.p_m = []
   144                                           
   145     53888       262307      4.9      3.0          x = self.x
   146     53888       250764      4.7      2.8          y = self.y
   147     53888       253585      4.7      2.9          b = board.b
   148     53888       261064      4.8      3.0          color = self.color
   149                                                   # if self.rule_num == 0:
   150                                                   # pass
   151                                                   #==================================================================================
   152                                                   #For pawn
   153                                                   #==================================================================================
   154     53888       263849      4.9      3.0          if self.rule_num == 1:
   155     13472        63246      4.7      0.7              if color == 'w':
   156      6736        31051      4.6      0.4                  test = True
   157      6736        30534      4.5      0.3                  if not x == 7:
   158      6736        32855      4.9      0.4                      sq = b[(x + 1)][y]
   159      6736        32283      4.8      0.4                      if sq.image == 0:
   160      6551        37712      5.8      0.4                          append(p_m, [x + 1, y])
   161                                                               else:
   162       185          837      4.5      0.0                          test = False
   163      6736        31864      4.7      0.4                      if not y == 7:
   164      5894        28659      4.9      0.3                          sq = b[x + 1][y + 1]
   165      5894        29212      5.0      0.3                          if not sq.image == 0 and not sq.color == color:
   166        14           77      5.5      0.0                              append(p_m, [x + 1, y + 1])
   167      6736        30833      4.6      0.3                      if not y == 0:
   168      5894        31306      5.3      0.4                          sq = b[x + 1][y - 1]
   169      5894        29502      5.0      0.3                          if not sq.image == 0 and not sq.color == color:
   170        14           83      5.9      0.0                              append(p_m, ([x + 1, y - 1]))
   171                                           
   172      6736        30773      4.6      0.3                  if x == 1:
   173      6064        29783      4.9      0.3                      sq = b[x + 2][y]
   174      6064        29021      4.8      0.3                      if not sq.image == 0:
   175                                                                   test = False
   176                                                           else:
   177       672         3117      4.6      0.0                      test = False
   178                                           
   179      6736        30707      4.6      0.3                  if test:
   180      5895        32222      5.5      0.4                      append(p_m, ([x + 2, y]))
   181      6736        32044      4.8      0.4                  if x == 7:
   182                                                               self.image = Images.White.queen
   183                                                               self.image_loc = 'pictures/queen.png'
   184                                                               self.rule_num = 5
   185     13472        65687      4.9      0.7              if color == 'b':
   186      6736        31521      4.7      0.4                  test = True
   187      6736        31252      4.6      0.4                  if not x == 0:
   188      6736        33491      5.0      0.4                      sq = b[x - 1][y]
   189      6736        32749      4.9      0.4                      if sq.image == 0:
   190      6560        39088      6.0      0.4                          append(p_m, ([x - 1, y]))
   191                                                               else:
   192       176          849      4.8      0.0                          test = False
   193                                           
   194      6736        32079      4.8      0.4                      if not y == 7:
   195      5894        28972      4.9      0.3                          sq = b[x - 1][y + 1]
   196      5894        29995      5.1      0.3                          if not sq.image == 0 and not sq.color == color:
   197        14           79      5.6      0.0                              append(p_m, ([x - 1, y + 1]))
   198                                           
   199      6736        32042      4.8      0.4                      if not y == 0:
   200      5894        29034      4.9      0.3                          sq = b[x - 1][y - 1]
   201      5894        30395      5.2      0.3                          if not sq.image == 0 and not sq.color == color:
   202        14           79      5.6      0.0                              append(p_m, ([x - 1, y - 1]))
   203                                           
   204      6736        31458      4.7      0.4                  if x == 6:
   205      6096        30034      4.9      0.3                      sq = b[x - 2][y]
   206      6096        30097      4.9      0.3                      if not sq.image == 0:
   207                                                                   test = False
   208                                                           else:
   209       640         3014      4.7      0.0                      test = False
   210      6736        31160      4.6      0.4                  if test:
   211      5936        33334      5.6      0.4                      append(p_m, ([x - 2, y]))
   212      6736        35018      5.2      0.4                  if x == 0:
   213                                                               self.image = Images.Black.queen
   214                                                               self.image_loc = 'pictures/bqueen.png'
   215                                                               self.rule_num = 5
   216                                                   #==================================================================================
   217                                                   #For rook
   218                                                   #==================================================================================
   219     40416       197920      4.9      2.2          elif self.rule_num == 2:
   220      3368        15669      4.7      0.2              List = []
   221      3368       126679     37.6      1.4              map(func.append_5, [List] * 8, xrange(0, 8), [x] * 8, [y] * 8, [b] * 8, [color] * 8)
   222                                           
   223      3368       401899    119.3      4.6              numbers = filter(test4, List)
   224      3368        17353      5.2      0.2              num = len(numbers)
   225      3368        28402      8.4      0.3              map(func.append_2_x, [p_m] * num, [x] * num, numbers)
   226                                           
   227      3368       449496    133.5      5.1              numbers = filter(test3, List)
   228      3368        19848      5.9      0.2              num = len(numbers)
   229      3368        29059      8.6      0.3              map(func.append_2_y, [p_m] * num, numbers, [y] * num)
   230                                           
   231                                                   #==================================================================================
   232                                                   #For Knight
   233                                                   #==================================================================================
   234     37048       182026      4.9      2.1          elif self.rule_num == 3:
   235      3368        15652      4.6      0.2              List_ = []
   236      3368        27931      8.3      0.3              map(func.append_6, [List_] * 8, [b] * 8, [x] * 8, [y] * 8, [2, 2, -2, -2, 1, 1, -1, -1],
   237      3368       109856     32.6      1.2                  [1, -1, 1, -1, 2, -2, 2, -2], [color] * 8)
   238      3368       127057     37.7      1.4              numbers = filter(filterer, List_)
   239      3368        54375     16.1      0.6              map(func.append_2by2, [p_m] * len(numbers), numbers)
   240                                           
   241                                                   #==================================================================================
   242                                                   #For Bishup
   243                                                   #==================================================================================
   244     33680       169928      5.0      1.9          elif self.rule_num == 4:
   245      3368        15797      4.7      0.2              List = []
   246      3368        16184      4.8      0.2              List_ = []
   247      3368        21936      6.5      0.2              map(func.append_5, [List_] * 28,
   248      3368        19469      5.8      0.2                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
   249      3368        19794      5.9      0.2                  [1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1],
   250      3368        22794      6.8      0.3                  [1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7], [x] * 28,
   251      3368       298563     88.6      3.4                  [y] * 28)
   252                                           
   253      3368       322634     95.8      3.7              numbers = filter(test5, List_)
   254      3368        17646      5.2      0.2              num = len(numbers)
   255      3368       114492     34.0      1.3              map(append_Bishup, [List] * num, numbers, [b] * num)
   256                                           
   257                                           
   258                                                       # for j in [1, -1]:
   259                                                       #     for h in [1, -1]:
   260                                                       #         for number in xrange(1, 8):
   261                                                       #             if :
   262                                                       #                     append(List, b[x + j * number][y + h * number])
   263                                                       #print List
   264                                           
   265      3368        24283      7.2      0.3              List_ = []
   266      3368        17756      5.3      0.2              num = len(List)
   267      3368       177087     52.6      2.0              map(mapper, [List_] * num, List, [x] * num, [y] * num, [b] * num, [color] * num)
   268                                           
   269      3368       324041     96.2      3.7              numbers = filter(test6, List_)
   270                                           
   271      3368        32590      9.7      0.4              map(append_SQ, [p_m] * len(numbers), numbers)
   272                                           
   273                                                       # for square in List:  ##getting target
   274                                                       #     test = True
   275                                                       #     xnum = (square.x - x) / abs(square.x - x)
   276                                                       #     ynum = (square.y - y) / abs(square.y - y)
   277                                                       #
   278                                                       #     for number in xrange(1, abs(square.x - x)):
   279                                                       #         sq = b[x + xnum * number][y + ynum * number]
   280                                                       #
   281                                                       #             test = False
   282                                                       #     if test:
   283                                                       #         #print ":)"
   284                                                       #         if not square == 0:
   285                                                       #             if square.image == 0 or not square.color == color:
   286                                                       #                 append(p_m, square.location)
   287                                                       #              not square.color == color:
   288                                                       #                 append(p_m, square.location)
   289                                           
   290                                                       # List = []
   291                                                       # for j in [1, -1]:
   292                                                       #     for h in [1, -1]:
   293                                                       #         for number in xrange(-8, 8):
   294                                                       #             for square in board.sq:
   295                                                       #                 if square.location == [self.x + j * number, self.y + h * number]:
   296                                                       #                     List.append(square)
   297                                                       # for square in List:  ##getting target
   298                                                       #     test = True
   299                                                       #     for sq in List:
   300                                                       #         if square.x < self.x:
   301                                                       #             if square.y < self.y:
   302                                                       #                 if self.x > sq.x > square.x and self.y > sq.y > square.y:
   303                                                       #                     if not sq.image == 0:
   304                                                       #                         test = False
   305                                                       #             if square.y > self.y:
   306                                                       #                 if self.x > sq.x > square.x and self.y < sq.y < square.y:
   307                                                       #                     if not sq.image == 0:
   308                                                       #                         test = False
   309                                                       #         if square.x > self.x:
   310                                                       #             if square.y < self.y:
   311                                                       #                 if self.x < sq.x < square.x and self.y > sq.y > square.y:
   312                                                       #                     if not sq.image == 0:
   313                                                       #                         test = False
   314                                                       #             if square.y > self.y:
   315                                                       #                 if self.x < sq.x < square.x and self.y < sq.y < square.y:
   316                                                       #                     if not sq.image == 0:
   317                                                       #                         test = False
   318                                                       #     if test:
   319                                                       #         if not square == 0:
   320                                                       #             if square.image == 0:
   321                                                       #                 p_m.append(square.location)
   322                                                       #             elif not square.color == color:
   323                                                       #                 p_m.append(square.location)
   324                                                   #==================================================================================
   325                                                   #For Queen
   326                                                   #==================================================================================
   327     30312       151436      5.0      1.7          elif self.rule_num == 5:
   328      1684         8021      4.8      0.1              List = []
   329      1684         7895      4.7      0.1              List_ = []
   330      1684        10919      6.5      0.1              map(func.append_5, [List_] * 56,
   331      1684         8706      5.2      0.1                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0,
   332      1684        10024      6.0      0.1                   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
   333      1684         8712      5.2      0.1                  [-1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1,
   334      1684         9839      5.8      0.1                   -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],
   335      1684         8856      5.3      0.1                  [1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1,
   336      1684       299460    177.8      3.4                   2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7], [x] * 56, [y] * 56)
   337                                           
   338      1684       310578    184.4      3.5              numbers = filter(test5, List_)
   339      1684         9230      5.5      0.1              num = len(numbers)
   340      1684       140570     83.5      1.6              map(append_Bishup, [List] * num, numbers, [b] * num)
   341                                           
   342                                           
   343                                                       # for j in [1, -1]:
   344                                                       #     for h in [1, -1]:
   345                                                       #         for number in xrange(1, 8):
   346                                                       #             if :
   347                                                       #                     append(List, b[x + j * number][y + h * number])
   348                                                       #print List
   349                                           
   350      1684        15494      9.2      0.2              List_ = []
   351      1684         8763      5.2      0.1              num = len(List)
   352      1684       279219    165.8      3.2              map(mapperQ, [List_] * num, List, [x] * num, [y] * num, [b] * num, [color] * num)
   353                                           
   354      1684       489812    290.9      5.6              numbers = filter(test6, List_)
   355                                           
   356      1684        17628     10.5      0.2              map(append_SQ, [p_m] * len(numbers), numbers)
   357                                                       # List = []
   358                                                       # for j in [1, -1]:
   359                                                       #     for h in [1, -1]:
   360                                                       #         for number in xrange(-8, 8):
   361                                                       #             if not number == 0:
   362                                                       #                 if 0 <= (x + j * number) <= 7 and 0 <= (y + h * number) <= 7:
   363                                                       #                     append(List, b[x + j * number][y + h * number])
   364                                                       # #print List
   365                                                       # for square in List:  ##getting target
   366                                                       #     test = True
   367                                                       #     xnum = (square.x - x) / abs(square.x - x)
   368                                                       #     ynum = (square.y - y) / abs(square.y - y)
   369                                                       #     for number in xrange(1, abs(square.x - x)):
   370                                                       #         sq = b[x + xnum * number][y + ynum * number]
   371                                                       #         if not sq.image == 0:
   372                                                       #             test = False
   373                                                       #     if test:
   374                                                       #         #print ":)"
   375                                                       #         if not square == 0:
   376                                                       #             if square.image == 0:
   377                                                       #                 append(p_m, square.location)
   378                                                       #             elif not square.color == color:
   379                                                       #                 append(p_m, square.location)
   380                                                       # #-------------------------------------------------------------------------------
   381                                                       # for number in xrange(0, 8):
   382                                                       #     test = True
   383                                                       #     SQ = b[x][number]
   384                                                       #     for square in b[x]:
   385                                                       #         if y > number:
   386                                                       #             if y > square.y > number:
   387                                                       #                 if not square.image == 0:
   388                                                       #                     test = False
   389                                                       #         elif y < number:
   390                                                       #             if y < square.y < number:
   391                                                       #                 if not square.image == 0:
   392                                                       #                     test = False
   393                                                       #     if test:
   394                                                       #         if SQ.image == 0:
   395                                                       #             append(p_m, ([x, number]))
   396                                                       #         elif not SQ.color == color:
   397                                                       #             append(p_m, ([x, number]))
   398                                                       #     test = True
   399                                                       #     if number > 7 or number < 0 or y < 0 or y > 7:
   400                                                       #         print number, y
   401                                                       #     SQ = b[number][y]
   402                                                       #     for row in b:
   403                                                       #         square = row[y]
   404                                                       #         if x > number:
   405                                                       #             if x > square.x > number:
   406                                                       #                 if not square.image == 0:
   407                                                       #                     test = False
   408                                                       #         if x < number:
   409                                                       #             if x < square.x < number:
   410                                                       #                 if not square.image == 0:
   411                                                       #                     test = False
   412                                                       #     if test:
   413                                                       #         if SQ.image == 0:
   414                                                       #             append(p_m, ([number, y]))
   415                                                       #         elif not SQ.color == color:
   416                                                       #             append(p_m, ([number, y]))
   417                                           
   418                                                   #==================================================================================
   419                                                   #For King
   420                                                   #==================================================================================
   421     28628       143867      5.0      1.6          elif self.rule_num == 6:
   422                                                       #[-1, -1, -1, 0, 0, 1, 1, 1]
   423                                                       #[-1, 0, 1, -1, 1, -1, 0, 1]
   424                                           
   425      1684         8081      4.8      0.1              List = []
   426                                           
   427      1684        13902      8.3      0.2              map(func.append_6, [List] * 8, [x] * 8, [y] * 8, [b] * 8,
   428      1684        56345     33.5      0.6                  [-1, -1, -1, 0, 0, 1, 1, 1], [-1, 0, 1, -1, 1, -1, 0, 1], [color] * 8)
   429                                           
   430      1684        72497     43.1      0.8              numbers = filter(KingFilter, List)
   431                                           
   432                                           
   433                                           
   434      1684        14720      8.7      0.2              map(appendKing, [p_m] * len(numbers), numbers)
   435                                           
   436                                           
   437                                                       # for i in [1, 0, -1]:
   438                                                       #     for j in [1, 0, -1]:
   439                                                       #         if (not j == 0 or not i == 0) and 0 <= (x + i) <= 7 and 0 <= (y + j) <= 7:
   440                                                       #             #print x + i, y + j
   441                                                       #             sq = b[x + i][y + j]
   442                                                       #             if sq.image == 0:
   443                                                       #                 append(p_m, sq.location)
   444                                                       #             elif not sq.color == color:
   445                                                       #                 append(p_m, sq.location)
   446     53888       261127      4.8      3.0          self.p_m = p_m


Timer unit: 1e-06 s

Total time: 7.25866 s
File: Functions.py
Function: check at line 18

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    18                                           @profile
    19                                           def check(board, b1, color, num, c2, list_, level, screen):#, fastfast,_
    20                                               ##    print ":)", LIST[1]
    21                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    22                                               #Display The board
    23                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    24                                               #b1.show(screen)
    25                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    26                                               #Makes a new board
    27                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    28                                               # b2 = create_b(board)
    29                                               # map(Square.Square.check, b2.array_square_Squares, [b2] * len(b2.array_square_Squares))
    30                                           
    31                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    32                                               #Makes the Moves
    33                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    34        21          127      6.0      0.0      moves = []
    35        21          108      5.1      0.0      def test(sq):
    36                                                   return sq.str_color == color and not sq.array_coordinate_Possible_Moves == []
    37                                           
    38        21           99      4.7      0.0      def checkextend(sq):
    39                                                   moves.extend(map(Move.Move, [sq.coordinate_location] * len(sq.array_coordinate_Possible_Moves),
    40                                                                    sq.array_coordinate_Possible_Moves, [board] * len(sq.array_coordinate_Possible_Moves),
    41                                                                    [color] * len(sq.array_coordinate_Possible_Moves)))
    42                                               # extend = list.extend
    43                                               # for sq in board.array_square_Squares:
    44                                               #     if sq.str_color == color:
    45                                               #         if not sq.array_coordinate_Possible_Moves == []:
    46                                               #             # for loc in sq.array_coordinate_Possible_Moves:
    47                                               #             #     moves.append(Move.Move(sq.loc, loc, board, color))
    48                                               #             length = len(sq.array_coordinate_Possible_Moves)
    49                                               #             extend(moves, map(Move.Move, [sq.coordinate_location] * length, sq.array_coordinate_Possible_Moves,
    50                                               #  [board] * length, [color] * length))
    51                                           
    52        21         2488    118.5      0.0      array_square_SQ = filter(test, board.array_square_Squares)
    53        21      3827414 182257.8     52.7      map(checkextend, array_square_SQ)
    54                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    55                                               #For fast Mode(non functional)
    56                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    57                                               # if fast_:
    58                                               #     pass
    59                                                   # if num == level:
    60                                                   #     del_list = []
    61                                                   #     for move in moves:
    62                                                   #         move.__check__(b2, b1, c2, screen)
    63                                                   #         if move.min == 1000:
    64                                                   #             del_list.append(move)
    65                                                   #     for move in del_list:
    66                                                   #         moves.remove(move)
    67                                                   # nmoves = []
    68                                                   # _moves = moves
    69                                                   # for i in xrange(0, 2):
    70                                                   #     __best__ = _moves[0]
    71                                                   #     for move in _moves:
    72                                                   #         if move.score > __best__.score:
    73                                                   #             __best__ = move
    74                                                   #     nmoves.append(__best__)
    75                                                   #     _moves.remove(__best__)
    76                                                   # moves = nmoves
    77                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    78                                               #Has the moves Check
    79                                               #Add Web Check Here
    80                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    81                                               # elif not fast_:
    82        21          127      6.0      0.0      check = Move.Move.check
    83        21          101      4.8      0.0      num_ = len(moves)
    84        21          197      9.4      0.0      map(check, moves, [board] * num_, [b1] * num_, [num] * num_,
    85        21          141      6.7      0.0          [c2] * num_, [[list_[1], moves]] * num_,
    86        21      3427734 163225.4     47.2          [level] * num_, [screen] * num_)  # [fast] * num_,, [fast_] * num_
    87                                                   # for move in moves:
    88                                                   #     check(move, board, b1, num, c2, [list_[1], moves], fast, level, screen, fast_)
    89                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    90                                               #returns the moves it has made. 
    91                                               ##+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    92        21          129      6.1      0.0      return moves

Total time: 3.74632 s
File: Move.py
Function: __init__ at line 16

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    16                                               @profile
    17                                               def __init__(self, loc, target, board, color, movestring = ''):
    18                                                   ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    19                                                   #MAking Inital Atributes
    20                                                   ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    21       420         2069      4.9      0.1          if movestring == '':
    22                                                       #print ":("
    23       420         1974      4.7      0.1              self.loc = loc
    24       420         1712      4.1      0.0              self.tar = target
    25       420         1739      4.1      0.0              self.color = color
    26                                                   else:
    27                                                       #print ":)"
    28                                                       string = movestring.split('|')
    29                                                       self.color = string[0]
    30                                                       self.loc = [int(y) for y in string[1].split(',')]
    31                                                       self.tar = [int(y) for y in string[2].split(',')]
    32                                                       board = Board.Board('pictures/chess2.jpg', [0, 0], 'b1')
    33                                                       board.FromString(string[3])
    34                                                       #print self.loc, self.tar
    35       420         1711      4.1      0.0          self.score = 0
    36       420         1819      4.3      0.0          self.moves = []
    37       420         2722      6.5      0.1          self.s_avg = 0
    38       420         1714      4.1      0.0          self.s_min = 0
    39       420         1745      4.2      0.0          self.s_max = 0
    40       420         1815      4.3      0.0          self.s_total = 0
    41       420         1724      4.1      0.0          self.av = 0
    42       420         1780      4.2      0.0          self.av_ = 0
    43       420         1749      4.2      0.0          self.tarsq = 0
    44       420         1747      4.2      0.0          self.locsq = 0
    45       420         1755      4.2      0.0          self.min = 0
    46       420         1747      4.2      0.0          self.max = 0
    47       420         1720      4.1      0.0          self.min_ = 0
    48       420         1796      4.3      0.0          self.max_ = 0
    49       420         1755      4.2      0.0          self.int_Rule_Num = 0
    50                                                   ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    51                                                   #Making Squares Of origanal Location
    52                                                   ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    53       420       487307   1160.3     13.0          b2 = Functions.create_b(board)
    54                                                   #print self.tar, self.loc
    55       420        81009    192.9      2.2          map(self.sort, b2.array_square_Squares)
    56                                                   # for sq in b2.array_square_Squares:
    57                                                   #     #print "~", sq.loc
    58                                                   #     if sq.coordinate_location == self.tar:
    59                                                   #         self.tarsq = sq
    60                                                   #     if sq.coordinate_location == self.loc:
    61                                                   #         self.locsq = sq
    62                                                   ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    63                                                   #Setting Atributes
    64                                                   ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    65       420         2061      4.9      0.1          if not self.tarsq == 0:
    66                                                       ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    67                                                       #Sets self.rule num to the rule num of
    68                                                       #the rarget Square so it can be used later
    69                                                       ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    70       420         1873      4.5      0.0              self.int_Rule_Num = self.tarsq.int_Rule_Num
    71                                                       ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    72                                                       #sets Move's Score
    73                                                       ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    74       420         4356     10.4      0.1              self.score = Functions.rulenum_to_score(self.tarsq.int_Rule_Num)
    75                                                       #print self.score
    76                                                       ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    77                                                       #Moves the move
    78                                                       ##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    79                                                       #print self.locsq
    80       420        63841    152.0      1.7              Functions.move_(b2, self.locsq.str_Name, self.tarsq.str_Name)
    81       420      3071085   7312.1     82.0              map(Square.Square.check, b2.array_square_Squares, [b2] * len(b2.array_square_Squares))

